Connect-JCOnline YourAPI
# Put a csv with users in C:\Temp\users.csv   Column name should be "username"
$csvPath = "C:\Temp\users.csv"
$exportedUsers = @()
$users = Import-Csv -Path $csvPath

foreach ($user in $users) {
    $displayName = $user.username
    Write-Host "Username: $displayName"
    
    # Get the password_date
    $passwordDate = Get-JCUser $displayName | Select-Object -ExpandProperty password_date
    
    # Convert the date to the appropriate format
    $passwordDateTime = [DateTime]::ParseExact($passwordDate, "yyyy-MM-ddTHH:mm:ss.fffZ", [System.Globalization.CultureInfo]::InvariantCulture)
    
    # Check the password change date
    $daysSincePasswordChange = (Get-Date) - $passwordDateTime
    
    # If the password change date is more than 100 days ago
    if ($daysSincePasswordChange.TotalDays -gt 100) {
        Write-Host "The user has to change your password."
        $exportedUsers += New-Object PSObject -Property @{
            "Username" = $displayName
            "Password Date" = $passwordDate
            "Password Status" = "The user has to change your password"
        }
    } else {
        Write-Host "There is no problem."
        $exportedUsers += New-Object PSObject -Property @{
            "Username" = $displayName
            "Password Date" = $passwordDate
            "Password Status" = "There is no problem"
        }
    }
}

# Export the results
$exportedUsers | Export-Csv -Path "C:\Temp\exported_users.csv" -NoTypeInformation




----


Connect to JumpCloud Online API:

Connect-JCOnline YourAPI: This command is likely connecting to the JumpCloud Online API. However, it seems like a placeholder (YourAPI) is used here, so the actual API credentials or connection details should be provided.
Process CSV File with Usernames:

The script assumes there is a CSV file located at C:\Temp\users.csv containing a list of usernames under the column named "username".
It imports the CSV data into the $users variable using Import-Csv.
Iterate Through Usernames:

It loops through each user in the $users array.
For each user, it extracts the username into the $displayName variable and displays it using Write-Host.
Retrieve Password Change Date:

It retrieves the password change date for each user from JumpCloud using Get-JCUser.
The password change date is stored in the $passwordDate variable.
Calculate Days Since Last Password Change:

It calculates the number of days since the last password change by subtracting the password change date from the current date and time.
Check Password Expiry:

If the number of days since the last password change is greater than 100, it indicates that the user needs to change their password.
It adds the user's details (username, password change date, and password status) to the $exportedUsers array.
Export Results to CSV:

It exports the details of all users (including username, password change date, and password status) to a CSV file located at C:\Temp\exported_users.csv using Export-Csv.
